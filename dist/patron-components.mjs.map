{"version":3,"file":"patron-components.mjs","sources":["../src/navigation/PageFetchTransport.ts","../src/navigation/Navigation.ts","../src/navigation/RouteDisplay.ts","../src/navigation/CurrentPage.ts","../src/controls/Input.ts","../src/controls/Visible.ts","../src/controls/Text.ts","../src/page/Page.ts"],"sourcesContent":["import { give, GuestType } from \"patron-oop\";\n\nexport interface RoutePageTransportType {\n    content(guest: GuestType<string>): void;\n}\n\nexport class PageFetchTransport implements RoutePageTransportType {\n    public constructor(\n        private basePath: string,\n        private template: string,\n    ) {}\n\n    public content(\n        guest: GuestType<string>\n    ): void {\n        fetch(this.basePath + '/' + this.template)\n            .then(result => {\n                return result.text();\n            })\n            .then(result => {\n                give(result, guest);\n            })\n    }\n\n}\n","import { FactoryType, give, GuestChain, GuestType, Patron, Source } from \"patron-oop\";\nimport { HistoryCurrentPage, HistoryNewPage } from \"patron-web-api\";\nimport { RoutePageTransportType } from \"src/navigation/PageFetchTransport\";\nimport { RouteDisplayType } from \"src/navigation/RouteDisplay\";\nimport { RoutePageType } from \"src/navigation/RoutePageType\";\n\nexport interface RouteDocument {\n    url: string,\n    template: string,\n    page: RoutePageType,\n    default?: boolean,\n}\n\nexport class Navigation {\n    public constructor(\n        private loading: Source<boolean>,\n        private basePath: Source<string>,\n        private currentPage: HistoryCurrentPage,\n        private newPage: HistoryNewPage,\n        private display: RouteDisplayType,\n        private pageTransport: FactoryType<RoutePageTransportType>,\n    ) { }\n\n    public page(url: string) {\n        this.basePath.receiving((basePath) => {\n            this.newPage.receive({\n                url: `${basePath}${url}`,\n                title: 'Идет загрузка',\n                data: {\n                    url: `${basePath}${url}`,\n                    date: Date.now(),\n                },\n            } as any);\n        });\n    }\n\n    public routes(routes: RouteDocument[]) {\n        const defaultRoute = routes.find(route => route.default);\n        this.firstLoad(() => {\n            this.currentPage.page(new Patron((value) => {\n                this.loading.receive(true);\n                this.basePath.receiving(\n                    (basePath) => {\n                        basePath = basePath.replace('/#', '');\n                        let currentUrl = value.url === '/' ? basePath + '/' : value.url;\n                        currentUrl = currentUrl.replace('#', '').replace('//', '/');\n                        let route = routes.find(route => basePath + route.url === currentUrl);\n\n                        if (!route && defaultRoute) {\n                            route = defaultRoute;\n                        }\n\n                        if (route) {\n                            this.pageTransport.create(\n                                basePath,\n                                route.template,\n                            ).content(\n                                (templateContent) => {\n                                    this.display.display(templateContent);\n                                    route.page.mounted();\n                                    this.loading.receive(false);\n                                }\n                            );\n                        }\n                    },\n                );\n            }));\n        });\n    }\n\n    private firstLoad(guest: GuestType) {\n        const chain = new GuestChain<any>();\n        this.basePath.receiving(chain.receiveKey('basePath'));\n        this.currentPage.page(chain.receiveKey('currentPage'));\n        chain.result(() => {\n            give(null, guest);\n        });\n    }\n}\n","export interface RouteDisplayType {\n    display(content: string): void;\n}\n\nexport class RouteDisplay implements RouteDisplayType {\n    public constructor(private selector: string) {}\n\n    public display(content: string): void {\n        const contentEl = document.querySelector(this.selector);\n        if (contentEl) {\n            contentEl.innerHTML = content;\n        }\n    }\n}\n","import { give, GuestAwareType, GuestType } from \"patron-oop\";\nimport { HistoryPageDocument } from \"patron-web-api\";\n\nexport class CurrentPage implements GuestAwareType<HistoryPageDocument> {\n    public receiving(guest: GuestType<HistoryPageDocument>) {\n        const correctUrl = location.href.replace(location.origin, '');\n        give(\n            {\n                title: 'Loading',\n                url: correctUrl,\n            },\n            guest\n        );\n        return guest;\n    }\n}\n","import { GuestType, Patron, SourceType } from \"patron-oop\";\n\ntype InputValue = number | string;\n\nexport class Input implements SourceType<InputValue> {\n    public constructor(private source: SourceType<InputValue>, selector: string) {\n      const el = document.querySelector(selector) as HTMLInputElement;\n      this.source.receiving(\n          new Patron((value) => {\n            el.value = String(value);\n          }),\n      );\n      el.addEventListener('keyup', () => {\n        this.receive(el.value);\n      });\n      el.addEventListener('change', (e) => {\n        this.receive(el.value);\n      });\n    }\n\n    public receiving(guest: GuestType<InputValue>) {\n      this.source.receiving(guest);\n      return this;\n    }\n\n    public receive(value: InputValue) {\n      this.source.receive(value);\n      return this;\n    }\n  }\n","import { GuestObjectType, SourceType } from \"patron-oop\";\n\nexport class Visible implements GuestObjectType<boolean> {\n    public constructor(\n        private selector: string\n    ) {}\n\n    public receive(isVisible: boolean): this {\n        const el = document.querySelector(this.selector) as HTMLElement;\n        if (el) {\n            el.style.display = isVisible ? 'block' : 'none';\n        }\n        return this;\n    }\n}\n","import { GuestObjectType } from \"patron-oop\";\n\nexport class Text implements GuestObjectType {\n  public constructor(private selector: string) {}\n\n  public receive(value: unknown) {\n    const element = document.querySelector(this.selector) as HTMLElement;\n    if (element) {\n      element.innerText = String(value);\n    }\n    return this;\n  }\n}\n","export class Page {\n    public constructor(private title: string) {\n    }\n\n    public mounted() {\n        document.title = this.title;\n    }\n}\n"],"names":["route"],"mappings":"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"}