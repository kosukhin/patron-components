{"version":3,"file":"patron-components.mjs","sources":["../src/navigation/PageFetchTransport.ts","../src/navigation/Navigation.ts","../src/navigation/RouteDisplay.ts","../src/navigation/CurrentPage.ts","../src/controls/Input.ts","../src/controls/Visible.ts","../src/controls/Text.ts","../src/controls/Link.ts","../src/controls/ComputedElement.ts","../src/page/Page.ts"],"sourcesContent":["import { give, GuestType } from \"patron-oop\";\n\nexport interface RoutePageTransportType {\n    content(guest: GuestType<string>): void;\n}\n\nexport class PageFetchTransport implements RoutePageTransportType {\n    public constructor(\n        private basePath: string,\n        private template: string,\n    ) {}\n\n    public content(\n        guest: GuestType<string>\n    ): void {\n        fetch(this.basePath + '/' + this.template)\n            .then(result => {\n                return result.text();\n            })\n            .then(result => {\n                give(result, guest);\n            })\n    }\n\n}\n","import {\n  FactoryType,\n  give,\n  GuestChain,\n  GuestType,\n  Patron,\n  Source,\n} from \"patron-oop\";\nimport { HistoryCurrentPage } from \"patron-web-api\";\nimport { RoutePageTransportType } from \"src/navigation/PageFetchTransport\";\nimport { RouteDisplayType } from \"src/navigation/RouteDisplay\";\nimport { RoutePageType } from \"src/navigation/RoutePageType\";\n\nexport interface RouteDocument {\n  url: string;\n  template: string;\n  page: RoutePageType;\n  default?: boolean;\n}\n\nexport class Navigation {\n  public constructor(\n    private loading: Source<boolean>,\n    private basePath: Source<string>,\n    private currentPage: HistoryCurrentPage,\n    private display: RouteDisplayType,\n    private pageTransport: FactoryType<RoutePageTransportType>,\n  ) {}\n\n  public routes(routes: RouteDocument[]) {\n    const defaultRoute = routes.find((route) => route.default);\n    this.firstLoad(() => {\n      this.currentPage.page(\n        new Patron((value) => {\n          this.loading.receive(true);\n          this.basePath.receiving((basePath) => {\n            basePath = basePath.replace(\"/#\", \"\");\n            let currentUrl = value.url === \"/\" ? basePath + \"/\" : value.url;\n            currentUrl = currentUrl.replace(\"#\", \"\").replace(\"//\", \"/\");\n            let route = routes.find(\n              (route) => basePath + route.url === currentUrl,\n            );\n\n            if (!route && defaultRoute) {\n              route = defaultRoute;\n            }\n\n            if (route) {\n              this.pageTransport\n                .create(basePath, route.template)\n                .content((templateContent) => {\n                  this.display.display(templateContent);\n                  route.page.mounted();\n                  this.loading.receive(false);\n                });\n            }\n          });\n        }),\n      );\n    });\n  }\n\n  private firstLoad(guest: GuestType) {\n    const chain = new GuestChain();\n    this.basePath.receiving(chain.receiveKey(\"basePath\"));\n    this.currentPage.page(chain.receiveKey(\"currentPage\"));\n    chain.result(() => {\n      give(null, guest);\n    });\n  }\n}\n","export interface RouteDisplayType {\n    display(content: string): void;\n}\n\nexport class RouteDisplay implements RouteDisplayType {\n    public constructor(private selector: string) {}\n\n    public display(content: string): void {\n        const contentEl = document.querySelector(this.selector);\n        if (contentEl) {\n            contentEl.innerHTML = content;\n        }\n    }\n}\n","import {\n  give,\n  GuestAwareType,\n  GuestMiddle,\n  GuestObjectType,\n  GuestType,\n  Source,\n} from \"patron-oop\";\nimport { HistoryPageDocument } from \"patron-web-api\";\n\nexport class CurrentPage\n  implements GuestAwareType<HistoryPageDocument>, GuestObjectType<string>\n{\n  private source = new Source<string>(\"/\");\n\n  public constructor() {\n    const correctUrl = location.href.replace(location.origin, \"\");\n    this.source.receive(correctUrl);\n  }\n\n  public receive(value: string): this {\n    this.source.receive(value);\n    return this;\n  }\n\n  public receiving(guest: GuestType<HistoryPageDocument>) {\n    this.source.receiving(\n      new GuestMiddle(guest as GuestType<unknown>, (url) => {\n        give(\n          {\n            title: \"Loading\",\n            url,\n          },\n          guest,\n        );\n      }),\n    );\n    return guest;\n  }\n}\n","import { GuestType, Patron, SourceType } from \"patron-oop\";\n\ntype InputValue = number | string;\n\nexport class Input implements SourceType<InputValue> {\n  public constructor(\n    private source: SourceType<InputValue>,\n    selector: string,\n  ) {\n    const el = document.querySelector(selector) as HTMLInputElement;\n    this.source.receiving(\n      new Patron((value) => {\n        el.value = String(value);\n      }),\n    );\n    el.addEventListener(\"keyup\", () => {\n      this.receive(el.value);\n    });\n    el.addEventListener(\"change\", () => {\n      this.receive(el.value);\n    });\n  }\n\n  public receiving(guest: GuestType<InputValue>) {\n    this.source.receiving(guest);\n    return this;\n  }\n\n  public receive(value: InputValue) {\n    this.source.receive(value);\n    return this;\n  }\n}\n","import { GuestObjectType } from \"patron-oop\";\n\nexport class Visible implements GuestObjectType<boolean> {\n  public constructor(private selector: string) {}\n\n  public receive(isVisible: boolean): this {\n    const el = document.querySelector(this.selector) as HTMLElement;\n    if (el) {\n      el.style.display = isVisible ? \"block\" : \"none\";\n    }\n    return this;\n  }\n}\n","import { GuestObjectType } from \"patron-oop\";\n\nexport class Text implements GuestObjectType {\n  public constructor(private selector: string) {}\n\n  public receive(value: unknown) {\n    const element = document.querySelector(this.selector) as HTMLElement;\n    if (element) {\n      element.innerText = String(value);\n    }\n    return this;\n  }\n}\n","import { GuestObjectType, SourceType } from \"patron-oop\";\n\nexport class Link {\n  public constructor(\n    private linkSource: GuestObjectType<string>,\n    private basePath: SourceType<string>,\n  ) {}\n\n  public watchClick(selector: string) {\n    const wrapperEl = document.querySelector(selector);\n    if (wrapperEl) {\n      wrapperEl.addEventListener(\"click\", (e) => {\n        e.preventDefault();\n        let href = (e?.target as HTMLElement)?.getAttribute(\"href\");\n        if (!href) {\n          href = (e?.currentTarget as HTMLElement)?.getAttribute(\"href\");\n        }\n        if (href) {\n          this.basePath.receiving((basePath) => {\n            this.linkSource.receive(basePath + href);\n          });\n        }\n      });\n    } else {\n      throw new Error(`Link wrapper not found for selector ${selector}`);\n    }\n  }\n}\n","import {\n  give,\n  GuestAwareType,\n  GuestCast,\n  GuestChain,\n  GuestMiddle,\n  GuestType,\n} from \"patron-oop\";\n\ntype SourceDetailType = {\n  source: GuestAwareType;\n  placeholder: string;\n};\n\nexport class ComputedElement {\n  public constructor(\n    private sources: SourceDetailType[],\n    private selectorTemplate: string,\n  ) {}\n\n  public element(guest: GuestType<HTMLElement>) {\n    const chain = new GuestChain();\n    this.sources.forEach((source) => {\n      source.source.receiving(\n        new GuestCast(guest as GuestType, chain.receiveKey(source.placeholder)),\n      );\n    });\n\n    chain.result(\n      new GuestMiddle(\n        guest as GuestType,\n        (placeholders: Record<string, string>) => {\n          let selectorTemplate = this.selectorTemplate;\n\n          Object.entries(placeholders).map((entry) => {\n            selectorTemplate = selectorTemplate.replaceAll(entry[0], entry[1]);\n          });\n\n          const element = document.querySelector(\n            selectorTemplate,\n          ) as HTMLElement;\n          if (element) {\n            give(element, guest);\n          }\n        },\n      ),\n    );\n  }\n}\n","export class Page {\n    public constructor(private title: string) {\n    }\n\n    public mounted() {\n        document.title = this.title;\n    }\n}\n"],"names":["route"],"mappings":"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"}