{"version":3,"file":"patron-components.js","sources":["../src/navigation/PageFetchTransport.ts","../src/navigation/Navigation.ts","../src/navigation/RouteDisplay.ts","../src/navigation/CurrentPage.ts","../src/controls/Input.ts","../src/controls/Visible.ts","../src/controls/Text.ts","../src/controls/Link.ts","../src/controls/ComputedElement.ts","../src/controls/ClassToggle.ts","../src/page/Page.ts","../src/page/EntryPointPage.ts"],"sourcesContent":["import { give, GuestType } from \"patron-oop\";\n\nexport interface RoutePageTransportType {\n  content(guest: GuestType<string>): void;\n}\n\nexport class PageFetchTransport implements RoutePageTransportType {\n  public constructor(\n    private basePath: string,\n    private template: string,\n  ) {}\n\n  public content(guest: GuestType<string>): void {\n    fetch(this.basePath + \"/\" + this.template)\n      .then((result) => {\n        return result.text();\n      })\n      .then((result) => {\n        give(result, guest);\n      });\n  }\n}\n","import {\n  FactoryType,\n  GuestChain,\n  Patron,\n  SourceType\n} from \"patron-oop\";\nimport { RoutePageTransportType } from \"src/navigation/PageFetchTransport\";\nimport { RouteDisplayType } from \"src/navigation/RouteDisplay\";\nimport { RoutePageType } from \"src/navigation/RoutePageType\";\n\nexport interface RouteDocument {\n  url: string;\n  template: string;\n  aliases?: string[];\n  page: RoutePageType;\n  default?: boolean;\n}\n\nexport class Navigation {\n  public constructor(\n    private loading: SourceType<boolean>,\n    private basePath: SourceType<string>,\n    private currentPage: SourceType<string>,\n    private display: RouteDisplayType,\n    private pageTransport: FactoryType<RoutePageTransportType>,\n  ) {}\n\n  public routes(routes: RouteDocument[]) {\n    const defaultRoute = routes.find((route) => route.default);\n    const chain = new GuestChain<{basePath: string, currentPage: string}>();\n    this.basePath.value(new Patron(chain.receiveKey(\"basePath\")));\n    this.currentPage.value(new Patron(chain.receiveKey(\"currentPage\")));\n    chain.result(\n      new Patron(({basePath, currentPage}) => {\n        const urlWithoutBasePath = currentPage.replace(basePath, '');\n        const routeMatchedToAlias = routes.find(\n          route => (route.aliases && (route.aliases.includes(currentPage) || route.aliases.includes(urlWithoutBasePath)))\n        );\n\n        if (routeMatchedToAlias) {\n          const correctUrl = basePath + routeMatchedToAlias.url;\n\n          if (correctUrl !== currentPage) {\n            this.currentPage.give(correctUrl);\n            return;\n          }\n        }\n\n        let route = routes.find(\n          (route) => {\n            if (route.url.indexOf('*') >= 0) {\n              const regexp = new RegExp(\n                route.url.replaceAll('*', '.*').replaceAll('/', '\\/'),\n              );\n              return regexp.test(urlWithoutBasePath);\n            }\n            return route.url.replaceAll('*', '') === urlWithoutBasePath\n          }\n        );\n\n        if (!route && defaultRoute) {\n          route = defaultRoute;\n        }\n\n        if (route) {\n          const basePathWithoutHash = basePath.replace('/#', '');\n          this.loading.give(true);\n          this.pageTransport\n            .create(basePathWithoutHash, route.template)\n            .content((templateContent) => {\n              this.display.display(templateContent);\n              route.page.mounted();\n              this.loading.give(false);\n            });\n        } else {\n          throw new Error('No matching route in Navigation');\n        }\n      }),\n    );\n  }\n}\n","export interface RouteDisplayType {\n  display(content: string): void;\n}\n\nexport class RouteDisplay implements RouteDisplayType {\n  public constructor(private selector: string) {}\n\n  public display(content: string): void {\n    const contentEl = document.querySelector(this.selector);\n    if (contentEl) {\n      contentEl.innerHTML = content;\n    }\n  }\n}\n","import {\n  GuestType,\n  Source,\n  SourceType\n} from \"patron-oop\";\n\nexport class CurrentPage implements SourceType<string> {\n  private source: SourceType<string>;\n\n  public constructor() {\n    const correctUrl = location.href.replace(location.origin, \"\");\n    this.source = new Source(correctUrl);\n  }\n\n  public give(value: string): this {\n    this.source.give(value);\n    return this;\n  }\n\n  public value(guest: GuestType<string>) {\n    this.source.value(guest);\n    return guest;\n  }\n}\n","import { GuestType, Patron, SourceType } from \"patron-oop\";\n\ntype InputValue = number | string;\n\nexport class Input implements SourceType<InputValue> {\n  public constructor(\n    private source: SourceType<InputValue>,\n    selector: string,\n  ) {\n    const el = document.querySelector(selector) as HTMLInputElement;\n    this.source.value(\n      new Patron((value) => {\n        el.value = String(value);\n      }),\n    );\n    el.addEventListener(\"keyup\", () => {\n      this.give(el.value);\n    });\n    el.addEventListener(\"change\", () => {\n      this.give(el.value);\n    });\n  }\n\n  public value(guest: GuestType<InputValue>) {\n    this.source.value(guest);\n    return this;\n  }\n\n  public give(value: InputValue) {\n    this.source.give(value);\n    return this;\n  }\n}\n","import { GuestObjectType } from \"patron-oop\";\n\nexport class Visible implements GuestObjectType<boolean> {\n  public constructor(private selector: string) {}\n\n  public give(isVisible: boolean): this {\n    const el = document.querySelector(this.selector) as HTMLElement;\n    if (el) {\n      el.style.display = isVisible ? \"block\" : \"none\";\n    }\n    return this;\n  }\n}\n","import { GuestObjectType } from \"patron-oop\";\n\nexport class Text implements GuestObjectType {\n  public constructor(private selector: string) {}\n\n  public give(value: unknown) {\n    const element = document.querySelector(this.selector) as HTMLElement;\n    if (element) {\n      element.innerText = String(value);\n    }\n    return this;\n  }\n}\n","import { GuestObjectType, SourceType } from \"patron-oop\";\n\nexport class Link {\n  public constructor(\n    private linkSource: GuestObjectType<string>,\n    private basePath: SourceType<string>,\n  ) {}\n\n  public watchClick(selector: string, subselector: string) {\n    const wrapperEl = document.querySelectorAll(selector);\n    if (wrapperEl.length) {\n      wrapperEl.forEach((theElement) => {\n        theElement.addEventListener(\"click\", (e) => {\n          e.preventDefault();\n          if (subselector) {\n            theElement.querySelectorAll(subselector).forEach(theSubElement => {\n              if (e?.target === theSubElement || e?.currentTarget === theSubElement) {\n                this.handleClick({\n                  target: theSubElement\n                } as unknown as Event);\n              }\n            })\n          } else {\n            this.handleClick(e);\n          }\n        });\n      });\n    } else {\n      throw new Error(`Link wrapper not found for selector ${selector}`);\n    }\n  }\n\n  private handleClick(e: Event) {\n    let href = (e?.target as HTMLElement)?.getAttribute(\"href\");\n    if (!href) {\n      href = (e?.currentTarget as HTMLElement)?.getAttribute(\"href\");\n    }\n    if (href) {\n      this.basePath.value((basePath) => {\n        this.linkSource.give(basePath + href);\n      });\n    }\n  }\n}\n","import {\n  give,\n  GuestAwareType,\n  GuestCast,\n  GuestChain,\n  GuestType,\n} from \"patron-oop\";\n\ntype SourceDetailType = {\n  source: GuestAwareType;\n  placeholder: string;\n};\n\nexport class ComputedElement {\n  public constructor(\n    private sources: SourceDetailType[],\n    private selectorTemplate: string,\n  ) {}\n\n  public element(guest: GuestType<HTMLElement>) {\n    const chain = new GuestChain();\n    this.sources.forEach((source) => {\n      source.source.value(\n        new GuestCast(guest as GuestType, chain.receiveKey(source.placeholder)),\n      );\n    });\n\n    chain.result(\n      new GuestCast(\n        guest as GuestType,\n        (placeholders: Record<string, string>) => {\n          let selectorTemplate = this.selectorTemplate;\n\n          Object.entries(placeholders).map((entry) => {\n            selectorTemplate = selectorTemplate.replaceAll(entry[0], entry[1]);\n          });\n\n          const element = document.querySelector(\n            selectorTemplate,\n          ) as HTMLElement;\n          if (element) {\n            give(element, guest);\n          }\n        },\n      ),\n    );\n  }\n}\n","import { GuestObjectType } from \"patron-oop\";\n\nexport class ClassToggle implements GuestObjectType<HTMLElement> {\n  public constructor(\n    private toggleClass: string,\n    private resetClassSelector: string,\n  ) {}\n\n  public give(element: HTMLElement): this {\n    document.querySelectorAll(this.resetClassSelector).forEach((el) => {\n      el.classList.remove(this.toggleClass);\n    });\n    element.classList.add(this.toggleClass);\n    return this;\n  }\n}\n","import { RoutePageType } from \"../navigation\";\n\nexport class Page implements RoutePageType {\n  public constructor(private title: string) {}\n\n  public mounted() {\n    document.title = this.title;\n  }\n}\n","import { RoutePageType } from \"../navigation\";\n\nexport class EntryPointPage implements RoutePageType {\n  public constructor(\n    private title: string,\n    private entryPointUrl: string,\n  ) {}\n\n  public mounted() {\n    document.title = this.title;\n    import(this.entryPointUrl).then((module) => {\n      if (module.main) {\n        module.main();\n      }\n    });\n  }\n}\n"],"names":["route"],"mappings":"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"}