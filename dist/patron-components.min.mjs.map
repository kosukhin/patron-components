{"version":3,"file":"patron-components.min.mjs","sources":["../src/navigation/PageFetchTransport.ts","../src/navigation/Navigation.ts","../src/navigation/RouteDisplay.ts","../src/navigation/CurrentPage.ts","../src/controls/Input.ts","../src/controls/Visible.ts","../src/controls/Text.ts","../src/controls/Link.ts","../src/controls/ComputedElement.ts","../src/controls/ClassToggle.ts","../src/page/Page.ts","../src/page/EntryPointPage.ts"],"sourcesContent":["import { give, GuestType } from \"patron-oop\";\n\nexport interface RoutePageTransportType {\n  content(guest: GuestType<string>): void;\n}\n\nexport class PageFetchTransport implements RoutePageTransportType {\n  public constructor(\n    private basePath: string,\n    private template: string,\n  ) {}\n\n  public content(guest: GuestType<string>): void {\n    fetch(this.basePath + \"/\" + this.template)\n      .then((result) => {\n        return result.text();\n      })\n      .then((result) => {\n        give(result, guest);\n      });\n  }\n}\n","import {\n  FactoryType,\n  GuestAwareAll,\n  Patron,\n  SourceType\n} from \"patron-oop\";\nimport { RoutePageTransportType } from \"src/navigation/PageFetchTransport\";\nimport { RouteDisplayType } from \"src/navigation/RouteDisplay\";\nimport { RoutePageType } from \"src/navigation/RoutePageType\";\n\nexport interface RouteDocument {\n  url: string;\n  template: string;\n  aliases?: string[];\n  page: RoutePageType;\n  default?: boolean;\n}\n\nexport class Navigation {\n  public constructor(\n    private loading: SourceType<boolean>,\n    private basePath: SourceType<string>,\n    private currentPage: SourceType<string>,\n    private display: RouteDisplayType,\n    private pageTransport: FactoryType<RoutePageTransportType>,\n  ) { }\n\n  public routes(routes: RouteDocument[]) {\n    const defaultRoute = routes.find((route) => route.default);\n    const chain = new GuestAwareAll<{ basePath: string, currentPage: string }>();\n    this.basePath.value(new Patron(chain.guestKey(\"basePath\")));\n    this.currentPage.value(new Patron(chain.guestKey(\"currentPage\")));\n    chain.value(\n      new Patron(({ basePath, currentPage }) => {\n        const urlWithoutBasePath = currentPage.replace(basePath, '');\n        const routeMatchedToAlias = routes.find(\n          route => (route.aliases && (route.aliases.includes(currentPage) || route.aliases.includes(urlWithoutBasePath)))\n        );\n\n        if (routeMatchedToAlias) {\n          const correctUrl = basePath + routeMatchedToAlias.url;\n\n          if (correctUrl !== currentPage) {\n            this.currentPage.give(correctUrl);\n            return;\n          }\n        }\n\n        let route = routes.find(\n          (route) => {\n            if (route.url.indexOf('*') >= 0) {\n              const regexp = new RegExp(\n                route.url.replaceAll('*', '.*').replaceAll('/', '\\/'),\n              );\n              return regexp.test(urlWithoutBasePath);\n            }\n            return route.url.replaceAll('*', '') === urlWithoutBasePath\n          }\n        );\n\n        if (!route && defaultRoute) {\n          route = defaultRoute;\n        }\n\n        if (route) {\n          const basePathWithoutHash = basePath.replace('/#', '');\n          this.loading.give(true);\n          this.pageTransport\n            .create(basePathWithoutHash, route.template)\n            .content((templateContent) => {\n              this.display.display(templateContent);\n              route.page.mounted();\n              this.loading.give(false);\n            });\n        } else {\n          throw new Error('No matching route in Navigation');\n        }\n      }),\n    );\n  }\n}\n","export interface RouteDisplayType {\n  display(content: string): void;\n}\n\nexport class RouteDisplay implements RouteDisplayType {\n  public constructor(private selector: string) {}\n\n  public display(content: string): void {\n    const contentEl = document.querySelector(this.selector);\n    if (contentEl) {\n      contentEl.innerHTML = content;\n    }\n  }\n}\n","import {\n  GuestType,\n  Source,\n  SourceType\n} from \"patron-oop\";\n\nexport class CurrentPage implements SourceType<string> {\n  private source: SourceType<string>;\n\n  public constructor() {\n    const correctUrl = location.href.replace(location.origin, \"\");\n    this.source = new Source(correctUrl);\n  }\n\n  public give(value: string): this {\n    this.source.give(value);\n    return this;\n  }\n\n  public value(guest: GuestType<string>) {\n    this.source.value(guest);\n    return guest;\n  }\n\n  public pool() {\n    return this.source.pool();\n  }\n}\n","import { GuestType, Patron, PatronPool, SourceType } from \"patron-oop\";\n\ntype InputValue = number | string;\n\nexport class Input implements SourceType<InputValue> {\n  public constructor(\n    private source: SourceType<InputValue>,\n    selector: string,\n  ) {\n    const el = document.querySelector(selector) as HTMLInputElement;\n    this.source.value(\n      new Patron((value) => {\n        el.value = String(value);\n      }),\n    );\n    el.addEventListener(\"keyup\", () => {\n      this.give(el.value);\n    });\n    el.addEventListener(\"change\", () => {\n      this.give(el.value);\n    });\n  }\n\n  public value(guest: GuestType<InputValue>) {\n    this.source.value(guest);\n    return this;\n  }\n\n  public give(value: InputValue) {\n    this.source.give(value);\n    return this;\n  }\n\n  public pool() {\n    return this.source.pool();\n  }\n}\n","import { GuestObjectType } from \"patron-oop\";\n\nexport class Visible implements GuestObjectType<boolean> {\n  public constructor(private selector: string) {}\n\n  public give(isVisible: boolean): this {\n    const el = document.querySelector(this.selector) as HTMLElement;\n    if (el) {\n      el.style.display = isVisible ? \"block\" : \"none\";\n    }\n    return this;\n  }\n}\n","import { GuestObjectType } from \"patron-oop\";\n\nexport class Text implements GuestObjectType {\n  public constructor(private selector: string) {}\n\n  public give(value: unknown) {\n    const element = document.querySelector(this.selector) as HTMLElement;\n    if (element) {\n      element.innerText = String(value);\n    }\n    return this;\n  }\n}\n","import { GuestObjectType, SourceType } from \"patron-oop\";\n\nexport class Link {\n  public constructor(\n    private linkSource: GuestObjectType<string>,\n    private basePath: SourceType<string>,\n  ) { }\n\n  public watchClick(selector: string, subselector: string) {\n    const wrapperEl = document.querySelectorAll(selector);\n    if (wrapperEl.length) {\n      wrapperEl.forEach((theElement) => {\n        theElement.addEventListener(\"click\", (e) => {\n          if (subselector) {\n            theElement.querySelectorAll(subselector).forEach(theSubElement => {\n              if (e?.target === theSubElement || e?.currentTarget === theSubElement) {\n                this.handleClick({\n                  preventDefault: e.preventDefault.bind(e),\n                  target: theSubElement\n                } as unknown as Event);\n              }\n            })\n          } else {\n            this.handleClick(e);\n          }\n        });\n      });\n    } else {\n      throw new Error(`Link wrapper not found for selector ${selector}`);\n    }\n  }\n\n  private handleClick(e: Event) {\n    let href = (e?.target as HTMLElement)?.getAttribute(\"href\");\n    if (!href) {\n      href = (e?.currentTarget as HTMLElement)?.getAttribute(\"href\");\n    }\n    if (href && href.indexOf('http') !== 0) {\n      e.preventDefault();\n      this.basePath.value((basePath) => {\n        this.linkSource.give(basePath + href);\n      });\n    }\n  }\n}\n","import {\n  give,\n  GuestAwareAll,\n  GuestAwareObjectType,\n  GuestCast,\n  GuestType\n} from \"patron-oop\";\n\ntype SourceDetailType = {\n  source: GuestAwareObjectType<any>;\n  placeholder: string;\n};\n\nexport class ComputedElement {\n  public constructor(\n    private sources: SourceDetailType[],\n    private selectorTemplate: string,\n  ) { }\n\n  public element(guest: GuestType<HTMLElement>) {\n    const chain = new GuestAwareAll();\n    this.sources.forEach((source) => {\n      source.source.value(\n        new GuestCast(guest as GuestType, chain.guestKey(source.placeholder)),\n      );\n    });\n\n    chain.value(\n      new GuestCast(\n        guest as GuestType,\n        (placeholders: Record<string, string>) => {\n          let selectorTemplate = this.selectorTemplate;\n\n          Object.entries(placeholders).map((entry) => {\n            selectorTemplate = selectorTemplate.replaceAll(entry[0], entry[1]);\n          });\n\n          const element = document.querySelector(\n            selectorTemplate,\n          ) as HTMLElement;\n          if (element) {\n            give(element, guest);\n          }\n        },\n      ),\n    );\n  }\n}\n","import { GuestObjectType } from \"patron-oop\";\n\nexport class ClassToggle implements GuestObjectType<HTMLElement> {\n  public constructor(\n    private toggleClass: string,\n    private resetClassSelector: string,\n  ) {}\n\n  public give(element: HTMLElement): this {\n    document.querySelectorAll(this.resetClassSelector).forEach((el) => {\n      el.classList.remove(this.toggleClass);\n    });\n    element.classList.add(this.toggleClass);\n    return this;\n  }\n}\n","import { RoutePageType } from \"../navigation\";\n\nexport class Page implements RoutePageType {\n  public constructor(private title: string) {}\n\n  public mounted() {\n    document.title = this.title;\n  }\n}\n","import { RoutePageType } from \"../navigation\";\n\nexport class EntryPointPage implements RoutePageType {\n  public constructor(\n    private title: string,\n    private entryPointUrl: string,\n  ) {}\n\n  public mounted() {\n    document.title = this.title;\n    import(this.entryPointUrl).then((module) => {\n      if (module.main) {\n        module.main();\n      }\n    });\n  }\n}\n"],"names":["PageFetchTransport","constructor","basePath","template","this","content","guest","fetch","then","result","text","give","Navigation","loading","currentPage","display","pageTransport","routes","defaultRoute","find","route","default","chain","GuestAwareAll","value","Patron","guestKey","urlWithoutBasePath","replace","routeMatchedToAlias","aliases","includes","correctUrl","url","indexOf","RegExp","replaceAll","test","Error","basePathWithoutHash","create","templateContent","page","mounted","RouteDisplay","selector","contentEl","document","querySelector","innerHTML","CurrentPage","__publicField","location","href","origin","source","Source","pool","Input","el","String","addEventListener","Visible","isVisible","style","Text","element","innerText","Link","linkSource","watchClick","subselector","wrapperEl","querySelectorAll","length","forEach","theElement","e","theSubElement","target","currentTarget","handleClick","preventDefault","bind","getAttribute","ComputedElement","sources","selectorTemplate","GuestCast","placeholder","placeholders","Object","entries","map","entry","ClassToggle","toggleClass","resetClassSelector","classList","remove","add","Page","title","EntryPointPage","entryPointUrl","import","module","main"],"mappings":"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"}