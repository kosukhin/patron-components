{"version":3,"file":"patron-components.min.mjs","sources":["../src/navigation/PageFetchTransport.ts","../src/navigation/Navigation.ts","../src/navigation/RouteDisplay.ts","../src/navigation/CurrentPage.ts","../src/controls/Input.ts","../src/controls/Visible.ts","../src/controls/Text.ts","../src/controls/Link.ts","../src/controls/ComputedElement.ts","../src/controls/ClassToggle.ts","../src/page/Page.ts","../src/page/EntryPointPage.ts"],"sourcesContent":["import { give, GuestType } from \"patron-oop\";\n\nexport interface RoutePageTransportType {\n  content(guest: GuestType<string>): void;\n}\n\nexport class PageFetchTransport implements RoutePageTransportType {\n  public constructor(\n    private basePath: string,\n    private template: string,\n  ) {}\n\n  public content(guest: GuestType<string>): void {\n    fetch(this.basePath + \"/\" + this.template)\n      .then((result) => {\n        return result.text();\n      })\n      .then((result) => {\n        give(result, guest);\n      });\n  }\n}\n","import {\n  FactoryType,\n  GuestChain,\n  Patron,\n  SourceType\n} from \"patron-oop\";\nimport { RoutePageTransportType } from \"src/navigation/PageFetchTransport\";\nimport { RouteDisplayType } from \"src/navigation/RouteDisplay\";\nimport { RoutePageType } from \"src/navigation/RoutePageType\";\n\nexport interface RouteDocument {\n  url: string;\n  template: string;\n  aliases?: string[];\n  page: RoutePageType;\n  default?: boolean;\n}\n\nexport class Navigation {\n  public constructor(\n    private loading: SourceType<boolean>,\n    private basePath: SourceType<string>,\n    private currentPage: SourceType<string>,\n    private display: RouteDisplayType,\n    private pageTransport: FactoryType<RoutePageTransportType>,\n  ) {}\n\n  public routes(routes: RouteDocument[]) {\n    const defaultRoute = routes.find((route) => route.default);\n    const chain = new GuestChain<{basePath: string, currentPage: string}>();\n    this.basePath.value(new Patron(chain.receiveKey(\"basePath\")));\n    this.currentPage.value(new Patron(chain.receiveKey(\"currentPage\")));\n    chain.result(\n      new Patron(({basePath, currentPage}) => {\n        const urlWithoutBasePath = currentPage.replace(basePath, '');\n        const routeMatchedToAlias = routes.find(\n          route => (route.aliases && (route.aliases.includes(currentPage) || route.aliases.includes(urlWithoutBasePath)))\n        );\n\n        if (routeMatchedToAlias) {\n          const correctUrl = basePath + routeMatchedToAlias.url;\n\n          if (correctUrl !== currentPage) {\n            this.currentPage.give(correctUrl);\n            return;\n          }\n        }\n\n        let route = routes.find(\n          (route) => route.url === urlWithoutBasePath\n        );\n\n        if (!route && defaultRoute) {\n          route = defaultRoute;\n        }\n\n        if (route) {\n          const basePathWithoutHash = basePath.replace('/#', '');\n          this.loading.give(true);\n          this.pageTransport\n            .create(basePathWithoutHash, route.template)\n            .content((templateContent) => {\n              this.display.display(templateContent);\n              route.page.mounted();\n              this.loading.give(false);\n            });\n        } else {\n          throw new Error('No matching route in Navigation');\n        }\n      }),\n    );\n  }\n}\n","export interface RouteDisplayType {\n  display(content: string): void;\n}\n\nexport class RouteDisplay implements RouteDisplayType {\n  public constructor(private selector: string) {}\n\n  public display(content: string): void {\n    const contentEl = document.querySelector(this.selector);\n    if (contentEl) {\n      contentEl.innerHTML = content;\n    }\n  }\n}\n","import {\n  GuestType,\n  Source,\n  SourceType\n} from \"patron-oop\";\n\nexport class CurrentPage implements SourceType<string> {\n  private source: SourceType<string>;\n\n  public constructor() {\n    const correctUrl = location.href.replace(location.origin, \"\");\n    this.source = new Source(correctUrl);\n  }\n\n  public give(value: string): this {\n    this.source.give(value);\n    return this;\n  }\n\n  public value(guest: GuestType<string>) {\n    this.source.value(guest);\n    return guest;\n  }\n}\n","import { GuestType, Patron, SourceType } from \"patron-oop\";\n\ntype InputValue = number | string;\n\nexport class Input implements SourceType<InputValue> {\n  public constructor(\n    private source: SourceType<InputValue>,\n    selector: string,\n  ) {\n    const el = document.querySelector(selector) as HTMLInputElement;\n    this.source.value(\n      new Patron((value) => {\n        el.value = String(value);\n      }),\n    );\n    el.addEventListener(\"keyup\", () => {\n      this.give(el.value);\n    });\n    el.addEventListener(\"change\", () => {\n      this.give(el.value);\n    });\n  }\n\n  public value(guest: GuestType<InputValue>) {\n    this.source.value(guest);\n    return this;\n  }\n\n  public give(value: InputValue) {\n    this.source.give(value);\n    return this;\n  }\n}\n","import { GuestObjectType } from \"patron-oop\";\n\nexport class Visible implements GuestObjectType<boolean> {\n  public constructor(private selector: string) {}\n\n  public give(isVisible: boolean): this {\n    const el = document.querySelector(this.selector) as HTMLElement;\n    if (el) {\n      el.style.display = isVisible ? \"block\" : \"none\";\n    }\n    return this;\n  }\n}\n","import { GuestObjectType } from \"patron-oop\";\n\nexport class Text implements GuestObjectType {\n  public constructor(private selector: string) {}\n\n  public give(value: unknown) {\n    const element = document.querySelector(this.selector) as HTMLElement;\n    if (element) {\n      element.innerText = String(value);\n    }\n    return this;\n  }\n}\n","import { GuestObjectType, SourceType } from \"patron-oop\";\n\nexport class Link {\n  public constructor(\n    private linkSource: GuestObjectType<string>,\n    private basePath: SourceType<string>,\n  ) {}\n\n  public watchClick(selector: string) {\n    const wrapperEl = document.querySelector(selector);\n    if (wrapperEl) {\n      wrapperEl.addEventListener(\"click\", (e) => {\n        e.preventDefault();\n        let href = (e?.target as HTMLElement)?.getAttribute(\"href\");\n        if (!href) {\n          href = (e?.currentTarget as HTMLElement)?.getAttribute(\"href\");\n        }\n        if (href) {\n          this.basePath.value((basePath) => {\n            this.linkSource.give(basePath + href);\n          });\n        }\n      });\n    } else {\n      throw new Error(`Link wrapper not found for selector ${selector}`);\n    }\n  }\n}\n","import {\n  give,\n  GuestAwareType,\n  GuestCast,\n  GuestChain,\n  GuestMiddle,\n  GuestType,\n} from \"patron-oop\";\n\ntype SourceDetailType = {\n  source: GuestAwareType;\n  placeholder: string;\n};\n\nexport class ComputedElement {\n  public constructor(\n    private sources: SourceDetailType[],\n    private selectorTemplate: string,\n  ) {}\n\n  public element(guest: GuestType<HTMLElement>) {\n    const chain = new GuestChain();\n    this.sources.forEach((source) => {\n      source.source.value(\n        new GuestCast(guest as GuestType, chain.receiveKey(source.placeholder)),\n      );\n    });\n\n    chain.result(\n      new GuestMiddle(\n        guest as GuestType,\n        (placeholders: Record<string, string>) => {\n          let selectorTemplate = this.selectorTemplate;\n\n          Object.entries(placeholders).map((entry) => {\n            selectorTemplate = selectorTemplate.replaceAll(entry[0], entry[1]);\n          });\n\n          const element = document.querySelector(\n            selectorTemplate,\n          ) as HTMLElement;\n          if (element) {\n            give(element, guest);\n          }\n        },\n      ),\n    );\n  }\n}\n","import { GuestObjectType } from \"patron-oop\";\n\nexport class ClassToggle implements GuestObjectType<HTMLElement> {\n  public constructor(\n    private toggleClass: string,\n    private resetClassSelector: string,\n  ) {}\n\n  public give(element: HTMLElement): this {\n    document.querySelectorAll(this.resetClassSelector).forEach((el) => {\n      el.classList.remove(this.toggleClass);\n    });\n    element.classList.add(this.toggleClass);\n    return this;\n  }\n}\n","import { RoutePageType } from \"../navigation\";\n\nexport class Page implements RoutePageType {\n  public constructor(private title: string) {}\n\n  public mounted() {\n    document.title = this.title;\n  }\n}\n","import { RoutePageType } from \"../navigation\";\n\nexport class EntryPointPage implements RoutePageType {\n  public constructor(\n    private title: string,\n    private entryPointUrl: string,\n  ) {}\n\n  public mounted() {\n    document.title = this.title;\n    import(this.entryPointUrl).then((module) => {\n      if (module.main) {\n        module.main();\n      }\n    });\n  }\n}\n"],"names":["PageFetchTransport","constructor","basePath","template","this","content","guest","fetch","then","result","text","give","Navigation","loading","currentPage","display","pageTransport","routes","defaultRoute","find","route","default","chain","GuestChain","value","Patron","receiveKey","urlWithoutBasePath","replace","routeMatchedToAlias","aliases","includes","correctUrl","url","Error","basePathWithoutHash","create","templateContent","page","mounted","RouteDisplay","selector","contentEl","document","querySelector","innerHTML","CurrentPage","__publicField","location","href","origin","source","Source","Input","el","String","addEventListener","Visible","isVisible","style","Text","element","innerText","Link","linkSource","watchClick","wrapperEl","e","preventDefault","target","getAttribute","currentTarget","ComputedElement","sources","selectorTemplate","forEach","GuestCast","placeholder","GuestMiddle","placeholders","Object","entries","map","entry","replaceAll","ClassToggle","toggleClass","resetClassSelector","querySelectorAll","classList","remove","add","Page","title","EntryPointPage","entryPointUrl","import","module","main"],"mappings":"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"}