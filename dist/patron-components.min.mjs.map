{"version":3,"file":"patron-components.min.mjs","sources":["../src/navigation/PageFetchTransport.ts","../src/navigation/Navigation.ts","../src/navigation/RouteDisplay.ts","../src/navigation/CurrentPage.ts","../src/controls/Input.ts","../src/controls/Visible.ts","../src/controls/Text.ts","../src/controls/Link.ts","../src/controls/ComputedElement.ts","../src/controls/ClassToggle.ts","../src/page/Page.ts"],"sourcesContent":["import { give, GuestType } from \"patron-oop\";\n\nexport interface RoutePageTransportType {\n  content(guest: GuestType<string>): void;\n}\n\nexport class PageFetchTransport implements RoutePageTransportType {\n  public constructor(\n    private basePath: string,\n    private template: string,\n  ) {}\n\n  public content(guest: GuestType<string>): void {\n    fetch(this.basePath + \"/\" + this.template)\n      .then((result) => {\n        return result.text();\n      })\n      .then((result) => {\n        give(result, guest);\n      });\n  }\n}\n","import {\n  FactoryType,\n  give,\n  GuestChain,\n  GuestType,\n  Patron,\n  SourceType,\n} from \"patron-oop\";\nimport { HistoryPageDocument } from \"patron-web-api\";\nimport { RoutePageTransportType } from \"src/navigation/PageFetchTransport\";\nimport { RouteDisplayType } from \"src/navigation/RouteDisplay\";\nimport { RoutePageType } from \"src/navigation/RoutePageType\";\n\nexport interface RouteDocument {\n  url: string;\n  template: string;\n  page: RoutePageType;\n  default?: boolean;\n}\n\nexport class Navigation {\n  public constructor(\n    private loading: SourceType<boolean>,\n    private basePath: SourceType<string>,\n    private currentPage: SourceType<HistoryPageDocument>,\n    private display: RouteDisplayType,\n    private pageTransport: FactoryType<RoutePageTransportType>,\n  ) {}\n\n  public routes(routes: RouteDocument[]) {\n    const defaultRoute = routes.find((route) => route.default);\n    this.firstLoad(() => {\n      this.currentPage.receiving(\n        new Patron((value) => {\n          this.loading.receive(true);\n          this.basePath.receiving((basePath) => {\n            basePath = basePath.replace(\"/#\", \"\");\n            let currentUrl = value.url === \"/\" ? basePath + \"/\" : value.url;\n            currentUrl = currentUrl.replace(\"#\", \"\").replace(\"//\", \"/\");\n            let route = routes.find(\n              (route) => basePath + route.url === currentUrl,\n            );\n\n            if (!route && defaultRoute) {\n              route = defaultRoute;\n            }\n\n            if (route) {\n              this.pageTransport\n                .create(basePath, route.template)\n                .content((templateContent) => {\n                  this.display.display(templateContent);\n                  route.page.mounted();\n                  this.loading.receive(false);\n                });\n            }\n          });\n        }),\n      );\n    });\n  }\n\n  private firstLoad(guest: GuestType) {\n    const chain = new GuestChain();\n    this.basePath.receiving(chain.receiveKey(\"basePath\"));\n    this.currentPage.receiving(chain.receiveKey(\"currentPage\"));\n    chain.result(() => {\n      give(null, guest);\n    });\n  }\n}\n","export interface RouteDisplayType {\n  display(content: string): void;\n}\n\nexport class RouteDisplay implements RouteDisplayType {\n  public constructor(private selector: string) {}\n\n  public display(content: string): void {\n    const contentEl = document.querySelector(this.selector);\n    if (contentEl) {\n      contentEl.innerHTML = content;\n    }\n  }\n}\n","import {\n  give,\n  GuestAwareType,\n  GuestMiddle,\n  GuestObjectType,\n  GuestType,\n  Source,\n} from \"patron-oop\";\nimport { HistoryPageDocument } from \"patron-web-api\";\n\nexport class CurrentPage\n  implements GuestAwareType<HistoryPageDocument>, GuestObjectType<string>\n{\n  private source = new Source<string>(\"/\");\n\n  public constructor() {\n    const correctUrl = location.href.replace(location.origin, \"\");\n    console.log(\"url from consttructor\", correctUrl);\n\n    this.source.receive(correctUrl);\n  }\n\n  public receive(value: string): this {\n    console.log(\"receive ourside\");\n\n    this.source.receive(value);\n    return this;\n  }\n\n  public receiving(guest: GuestType<HistoryPageDocument>) {\n    this.source.receiving(\n      new GuestMiddle(guest as GuestType<unknown>, (url) => {\n        console.trace(\"new url is\", url);\n\n        give(\n          {\n            title: \"Loading\",\n            url,\n          },\n          guest,\n        );\n      }),\n    );\n    return guest;\n  }\n}\n","import { GuestType, Patron, SourceType } from \"patron-oop\";\n\ntype InputValue = number | string;\n\nexport class Input implements SourceType<InputValue> {\n  public constructor(\n    private source: SourceType<InputValue>,\n    selector: string,\n  ) {\n    const el = document.querySelector(selector) as HTMLInputElement;\n    this.source.receiving(\n      new Patron((value) => {\n        el.value = String(value);\n      }),\n    );\n    el.addEventListener(\"keyup\", () => {\n      this.receive(el.value);\n    });\n    el.addEventListener(\"change\", () => {\n      this.receive(el.value);\n    });\n  }\n\n  public receiving(guest: GuestType<InputValue>) {\n    this.source.receiving(guest);\n    return this;\n  }\n\n  public receive(value: InputValue) {\n    this.source.receive(value);\n    return this;\n  }\n}\n","import { GuestObjectType } from \"patron-oop\";\n\nexport class Visible implements GuestObjectType<boolean> {\n  public constructor(private selector: string) {}\n\n  public receive(isVisible: boolean): this {\n    const el = document.querySelector(this.selector) as HTMLElement;\n    if (el) {\n      el.style.display = isVisible ? \"block\" : \"none\";\n    }\n    return this;\n  }\n}\n","import { GuestObjectType } from \"patron-oop\";\n\nexport class Text implements GuestObjectType {\n  public constructor(private selector: string) {}\n\n  public receive(value: unknown) {\n    const element = document.querySelector(this.selector) as HTMLElement;\n    if (element) {\n      element.innerText = String(value);\n    }\n    return this;\n  }\n}\n","import { GuestObjectType, SourceType } from \"patron-oop\";\n\nexport class Link {\n  public constructor(\n    private linkSource: GuestObjectType<string>,\n    private basePath: SourceType<string>,\n  ) {}\n\n  public watchClick(selector: string) {\n    const wrapperEl = document.querySelector(selector);\n    if (wrapperEl) {\n      wrapperEl.addEventListener(\"click\", (e) => {\n        e.preventDefault();\n        let href = (e?.target as HTMLElement)?.getAttribute(\"href\");\n        if (!href) {\n          href = (e?.currentTarget as HTMLElement)?.getAttribute(\"href\");\n        }\n        if (href) {\n          this.basePath.receiving((basePath) => {\n            this.linkSource.receive(basePath + href);\n          });\n        }\n      });\n    } else {\n      throw new Error(`Link wrapper not found for selector ${selector}`);\n    }\n  }\n}\n","import {\n  give,\n  GuestAwareType,\n  GuestCast,\n  GuestChain,\n  GuestMiddle,\n  GuestType,\n} from \"patron-oop\";\n\ntype SourceDetailType = {\n  source: GuestAwareType;\n  placeholder: string;\n};\n\nexport class ComputedElement {\n  public constructor(\n    private sources: SourceDetailType[],\n    private selectorTemplate: string,\n  ) {}\n\n  public element(guest: GuestType<HTMLElement>) {\n    const chain = new GuestChain();\n    this.sources.forEach((source) => {\n      source.source.receiving(\n        new GuestCast(guest as GuestType, chain.receiveKey(source.placeholder)),\n      );\n    });\n\n    chain.result(\n      new GuestMiddle(\n        guest as GuestType,\n        (placeholders: Record<string, string>) => {\n          let selectorTemplate = this.selectorTemplate;\n\n          Object.entries(placeholders).map((entry) => {\n            selectorTemplate = selectorTemplate.replaceAll(entry[0], entry[1]);\n          });\n\n          const element = document.querySelector(\n            selectorTemplate,\n          ) as HTMLElement;\n          if (element) {\n            give(element, guest);\n          }\n        },\n      ),\n    );\n  }\n}\n","import { GuestObjectType } from \"patron-oop\";\n\nexport class ClassToggle implements GuestObjectType<HTMLElement> {\n  public constructor(\n    private toggleClass: string,\n    private resetClassSelector: string,\n  ) {}\n\n  public receive(element: HTMLElement): this {\n    document.querySelectorAll(this.resetClassSelector).forEach((el) => {\n      el.classList.remove(this.toggleClass);\n    });\n    element.classList.add(this.toggleClass);\n    return this;\n  }\n}\n","export class Page {\n  public constructor(private title: string) {}\n\n  public mounted() {\n    document.title = this.title;\n  }\n}\n"],"names":["PageFetchTransport","constructor","basePath","template","this","content","guest","fetch","then","result","text","give","Navigation","loading","currentPage","display","pageTransport","routes","defaultRoute","find","route","default","firstLoad","receiving","Patron","value","receive","replace","currentUrl","url","create","templateContent","page","mounted","chain","GuestChain","receiveKey","RouteDisplay","selector","contentEl","document","querySelector","innerHTML","CurrentPage","__publicField","Source","correctUrl","location","href","origin","console","log","source","GuestMiddle","trace","title","Input","el","String","addEventListener","Visible","isVisible","style","Text","element","innerText","Link","linkSource","watchClick","wrapperEl","Error","e","preventDefault","target","getAttribute","currentTarget","ComputedElement","sources","selectorTemplate","forEach","GuestCast","placeholder","placeholders","Object","entries","map","entry","replaceAll","ClassToggle","toggleClass","resetClassSelector","querySelectorAll","classList","remove","add","Page"],"mappings":"0GAMO,MAAMA,EACJ,WAAAC,CACGC,EACAC,GADAC,KAAAF,SAAAA,EACAE,KAAAD,SAAAA,CACP,CAEI,OAAAE,CAAQC,GACPC,MAAAH,KAAKF,SAAW,IAAME,KAAKD,UAC9BK,MAAMC,GACEA,EAAOC,SAEfF,MAAMC,IACLE,EAAKF,EAAQH,EAAK,GAExB,ECAK,MAAMM,EACJ,WAAAX,CACGY,EACAX,EACAY,EACAC,EACAC,GAJAZ,KAAAS,QAAAA,EACAT,KAAAF,SAAAA,EACAE,KAAAU,YAAAA,EACAV,KAAAW,QAAAA,EACAX,KAAAY,cAAAA,CACP,CAEI,MAAAC,CAAOA,GACZ,MAAMC,EAAeD,EAAOE,MAAMC,GAAUA,EAAMC,UAClDjB,KAAKkB,WAAU,KACblB,KAAKU,YAAYS,UACf,IAAIC,GAAQC,IACLrB,KAAAS,QAAQa,SAAQ,GAChBtB,KAAAF,SAASqB,WAAWrB,IACZA,EAAAA,EAASyB,QAAQ,KAAM,IAClC,IAAIC,EAA2B,MAAdH,EAAMI,IAAc3B,EAAW,IAAMuB,EAAMI,IAC5DD,EAAaA,EAAWD,QAAQ,IAAK,IAAIA,QAAQ,KAAM,KACvD,IAAIP,EAAQH,EAAOE,MAChBC,GAAUlB,EAAWkB,EAAMS,MAAQD,KAGjCR,GAASF,IACJE,EAAAF,GAGNE,GACGhB,KAAAY,cACFc,OAAO5B,EAAUkB,EAAMjB,UACvBE,SAAS0B,IACH3B,KAAAW,QAAQA,QAAQgB,GACrBX,EAAMY,KAAKC,UACN7B,KAAAS,QAAQa,SAAQ,EAAK,GAEhC,GACD,IAEL,GAEJ,CAEQ,SAAAJ,CAAUhB,GACV,MAAA4B,EAAQ,IAAIC,EAClB/B,KAAKF,SAASqB,UAAUW,EAAME,WAAW,aACzChC,KAAKU,YAAYS,UAAUW,EAAME,WAAW,gBAC5CF,EAAMzB,QAAO,KACXE,EAAK,KAAML,EAAK,GAEpB,ECjEK,MAAM+B,EACJ,WAAApC,CAAoBqC,GAAAlC,KAAAkC,SAAAA,CAAmB,CAEvC,OAAAvB,CAAQV,GACb,MAAMkC,EAAYC,SAASC,cAAcrC,KAAKkC,UAC1CC,IACFA,EAAUG,UAAYrC,EAE1B,uICFK,MAAMsC,EAKJ,WAAA1C,GAFC2C,EAAAxC,KAAA,SAAS,IAAIyC,EAAe,MAGlC,MAAMC,EAAaC,SAASC,KAAKrB,QAAQoB,SAASE,OAAQ,IAClDC,QAAAC,IAAI,wBAAyBL,GAEhC1C,KAAAgD,OAAO1B,QAAQoB,EACtB,CAEO,OAAApB,CAAQD,GAIN,OAHPyB,QAAQC,IAAI,mBAEP/C,KAAAgD,OAAO1B,QAAQD,GACbrB,IACT,CAEO,SAAAmB,CAAUjB,GAcR,OAbPF,KAAKgD,OAAO7B,UACV,IAAI8B,EAAY/C,GAA8BuB,IACpCqB,QAAAI,MAAM,aAAczB,GAE5BlB,EACE,CACE4C,MAAO,UACP1B,OAEFvB,EACF,KAGGA,CACT,ECxCK,MAAMkD,EACJ,WAAAvD,CACGmD,EACRd,GADQlC,KAAAgD,OAAAA,EAGF,MAAAK,EAAKjB,SAASC,cAAcH,GAClClC,KAAKgD,OAAO7B,UACV,IAAIC,GAAQC,IACPgC,EAAAhC,MAAQiC,OAAOjC,EAAK,KAGxBgC,EAAAE,iBAAiB,SAAS,KACtBvD,KAAAsB,QAAQ+B,EAAGhC,MAAK,IAEpBgC,EAAAE,iBAAiB,UAAU,KACvBvD,KAAAsB,QAAQ+B,EAAGhC,MAAK,GAEzB,CAEO,SAAAF,CAAUjB,GAER,OADFF,KAAAgD,OAAO7B,UAAUjB,GACfF,IACT,CAEO,OAAAsB,CAAQD,GAEN,OADFrB,KAAAgD,OAAO1B,QAAQD,GACbrB,IACT,EC7BK,MAAMwD,EACJ,WAAA3D,CAAoBqC,GAAAlC,KAAAkC,SAAAA,CAAmB,CAEvC,OAAAZ,CAAQmC,GACb,MAAMJ,EAAKjB,SAASC,cAAcrC,KAAKkC,UAIhC,OAHHmB,IACCA,EAAAK,MAAM/C,QAAU8C,EAAY,QAAU,QAEpCzD,IACT,ECTK,MAAM2D,EACJ,WAAA9D,CAAoBqC,GAAAlC,KAAAkC,SAAAA,CAAmB,CAEvC,OAAAZ,CAAQD,GACb,MAAMuC,EAAUxB,SAASC,cAAcrC,KAAKkC,UAIrC,OAHH0B,IACMA,EAAAC,UAAYP,OAAOjC,IAEtBrB,IACT,ECTK,MAAM8D,EACJ,WAAAjE,CACGkE,EACAjE,GADAE,KAAA+D,WAAAA,EACA/D,KAAAF,SAAAA,CACP,CAEI,UAAAkE,CAAW9B,GACV,MAAA+B,EAAY7B,SAASC,cAAcH,GACzC,IAAI+B,EAcF,MAAM,IAAIC,MAAM,uCAAuChC,KAb7C+B,EAAAV,iBAAiB,SAAUY,IACnCA,EAAEC,iBACF,IAAIxB,EAAQuB,GAAGE,QAAwBC,aAAa,QAC/C1B,IACKA,EAAAuB,GAAGI,eAA+BD,aAAa,SAErD1B,GACG5C,KAAAF,SAASqB,WAAWrB,IAClBE,KAAA+D,WAAWzC,QAAQxB,EAAW8C,EAAI,GAE3C,GAKN,ECZK,MAAM4B,EACJ,WAAA3E,CACG4E,EACAC,GADA1E,KAAAyE,QAAAA,EACAzE,KAAA0E,iBAAAA,CACP,CAEI,OAAAd,CAAQ1D,GACP,MAAA4B,EAAQ,IAAIC,EACb/B,KAAAyE,QAAQE,SAAS3B,IACpBA,EAAOA,OAAO7B,UACZ,IAAIyD,EAAU1E,EAAoB4B,EAAME,WAAWgB,EAAO6B,cAC5D,IAGI/C,EAAAzB,OACJ,IAAI4C,EACF/C,GACC4E,IACC,IAAIJ,EAAmB1E,KAAK0E,iBAE5BK,OAAOC,QAAQF,GAAcG,KAAKC,IAChCR,EAAmBA,EAAiBS,WAAWD,EAAM,GAAIA,EAAM,GAAE,IAGnE,MAAMtB,EAAUxB,SAASC,cACvBqC,GAEEd,GACFrD,EAAKqD,EAAS1D,EAChB,IAIR,EC7CK,MAAMkF,EACJ,WAAAvF,CACGwF,EACAC,GADAtF,KAAAqF,YAAAA,EACArF,KAAAsF,mBAAAA,CACP,CAEI,OAAAhE,CAAQsC,GAKN,OAJPxB,SAASmD,iBAAiBvF,KAAKsF,oBAAoBX,SAAStB,IACvDA,EAAAmC,UAAUC,OAAOzF,KAAKqF,YAAW,IAE9BzB,EAAA4B,UAAUE,IAAI1F,KAAKqF,aACpBrF,IACT,ECdK,MAAM2F,EACJ,WAAA9F,CAAoBsD,GAAAnD,KAAAmD,MAAAA,CAAgB,CAEpC,OAAAtB,GACLO,SAASe,MAAQnD,KAAKmD,KACxB"}