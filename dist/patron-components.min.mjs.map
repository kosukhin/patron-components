{"version":3,"file":"patron-components.min.mjs","sources":["../src/navigation/PageFetchTransport.ts","../src/navigation/Navigation.ts","../src/navigation/RouteDisplay.ts","../src/navigation/CurrentPage.ts","../src/navigation/Router.ts","../src/controls/Input.ts","../src/controls/Visible.ts","../src/controls/Text.ts","../src/controls/Link.ts","../src/controls/ComputedElement.ts","../src/controls/GroupActiveClass.ts","../src/page/Page.ts","../src/page/EntryPointPage.ts"],"sourcesContent":["import { give, GuestType } from \"patron-oop\";\n\nexport interface RoutePageTransportType {\n  content(guest: GuestType<string>): void;\n}\n\nexport class PageFetchTransport implements RoutePageTransportType {\n  public constructor(\n    private basePath: string,\n    private template: string,\n  ) {}\n\n  public content(guest: GuestType<string>): void {\n    fetch(this.basePath + \"/\" + this.template)\n      .then((result) => {\n        return result.text();\n      })\n      .then((result) => {\n        give(result, guest);\n      });\n  }\n}\n","import {\n  SourceAll,\n  Patron,\n  PrivateType,\n  SourceType,\n  value,\n  give,\n  SourceWithPoolType,\n} from \"patron-oop\";\nimport { RoutePageTransportType } from \"src/navigation/PageFetchTransport\";\nimport { RouteDisplayType } from \"src/navigation/RouteDisplay\";\nimport { RoutePageType } from \"src/navigation/RoutePageType\";\n\nexport interface RouteDocument {\n  url: string;\n  template: string;\n  aliases?: string[];\n  page: RoutePageType;\n  default?: boolean;\n}\n\nexport class Navigation {\n  public constructor(\n    private loading: SourceWithPoolType<boolean>,\n    private basePath: SourceType<string>,\n    private currentPage: SourceWithPoolType<string>,\n    private display: RouteDisplayType,\n    private pageTransport: PrivateType<RoutePageTransportType>,\n  ) {}\n\n  public routes(routes: RouteDocument[]) {\n    const defaultRoute = routes.find((route) => route.default);\n    const all = new SourceAll<{\n      basePath: string;\n      currentPage: string;\n    }>();\n    value(this.basePath, new Patron(all.guestKey(\"basePath\")));\n    value(this.currentPage, new Patron(all.guestKey(\"currentPage\")));\n\n    all.value(\n      new Patron(({ basePath, currentPage }) => {\n        const urlWithoutBasePath = currentPage.replace(basePath, \"\");\n        const routeMatchedToAlias = routes.find(\n          (route) =>\n            route.aliases &&\n            (route.aliases.includes(currentPage) ||\n              route.aliases.includes(urlWithoutBasePath)),\n        );\n\n        if (routeMatchedToAlias) {\n          const correctUrl = basePath + routeMatchedToAlias.url;\n\n          if (correctUrl !== currentPage) {\n            give(correctUrl, this.currentPage);\n            return;\n          }\n        }\n\n        let route = routes.find((route) => {\n          if (route.url.indexOf(\"*\") >= 0) {\n            const regexp = new RegExp(\n              route.url.replaceAll(\"*\", \".*\").replaceAll(\"/\", \"/\"),\n            );\n            return regexp.test(urlWithoutBasePath);\n          }\n          return route.url.replaceAll(\"*\", \"\") === urlWithoutBasePath;\n        });\n\n        if (!route && defaultRoute) {\n          route = defaultRoute;\n        }\n\n        if (route) {\n          const basePathWithoutHash = basePath\n            .replace(\"/#\", \"\")\n            .replace(\"#\", \"\")\n            .replace(/[^/]+\\.html$/, \"\");\n          give(true, this.loading);\n          this.pageTransport\n            .get(basePathWithoutHash, route.template)\n            .content((templateContent) => {\n              this.display.display(templateContent);\n              route.page.mounted();\n              give(false, this.loading);\n            });\n        } else {\n          throw new Error(\"No matching route in Navigation\");\n        }\n      }),\n    );\n  }\n}\n","export interface RouteDisplayType {\n  display(content: string): void;\n}\n\n/**\n * Renders content on selector\n */\nexport class RouteDisplay implements RouteDisplayType {\n  public constructor(private selector: string) {}\n\n  public display(content: string): void {\n    const contentEl = document.querySelector(this.selector);\n    if (contentEl) {\n      contentEl.innerHTML = content;\n    }\n  }\n}\n","import { GuestType, SourceWithPool, SourceWithPoolType } from \"patron-oop\";\n\nexport class CurrentPage implements SourceWithPoolType<string> {\n  private source: SourceWithPoolType<string>;\n\n  public constructor() {\n    const correctUrl = location.href.replace(location.origin, \"\");\n    this.source = new SourceWithPool(correctUrl);\n  }\n\n  public give(value: string): this {\n    this.source.give(value);\n    return this;\n  }\n\n  public value(guest: GuestType<string>) {\n    this.source.value(guest);\n    return guest;\n  }\n\n  public pool() {\n    return this.source.pool();\n  }\n}\n","import {\n  Source,\n  SourceAll,\n  GuestCast,\n  Patron,\n  PrivateClass,\n  SourceWithPool,\n  give,\n  sourceOf,\n} from \"patron-oop\";\nimport { HistoryNewPage, HistoryPoppedPage } from \"patron-web-api\";\nimport { ComputedElement, GroupActiveClass, Link, Visible } from \"src/controls\";\nimport { CurrentPage } from \"src/navigation/CurrentPage\";\nimport { Navigation } from \"src/navigation/Navigation\";\nimport { PageFetchTransport } from \"src/navigation/PageFetchTransport\";\nimport { RouteDisplay } from \"src/navigation/RouteDisplay\";\n\ntype Route = {\n  url: string;\n  template: string;\n  aliases: string[];\n  page: any;\n};\n\nexport class Router {\n  public constructor(\n    private loaderSelector: string,\n    private navigationResultSelector: string,\n    private menuSelector: string,\n  ) {}\n\n  routes(\n    routes: Route[],\n    currentPage: any,\n    basePathSource: any,\n    afterPageLoaded?: () => void,\n  ) {\n    if (!currentPage) {\n      currentPage = new CurrentPage();\n    }\n    currentPage.value(new Patron(new HistoryNewPage()));\n\n    const [basePath] = location.href.replace(location.origin, \"\").split(\"#\");\n    if (!basePathSource) {\n      basePathSource = new SourceWithPool(\n        `${basePath}#`.replace(\"index.html\", \"\").replace(\"//\", \"/\"),\n      );\n    }\n\n    const pageLoading = new SourceWithPool(false);\n    pageLoading.value(new Patron(new Visible(this.loaderSelector)));\n\n    const historyPoppedPage = new HistoryPoppedPage(currentPage);\n    historyPoppedPage.watchPop();\n\n    const navigation = new Navigation(\n      pageLoading,\n      basePathSource,\n      currentPage,\n      new RouteDisplay(this.navigationResultSelector),\n      new PrivateClass(PageFetchTransport),\n    );\n    navigation.routes(routes);\n\n    const link = new Link(currentPage, basePathSource);\n    link.watchClick(this.menuSelector);\n\n    const urlChain = new SourceAll<any>();\n    basePathSource.value(new Patron(urlChain.guestKey(\"basePath\")));\n    currentPage.value(new Patron(urlChain.guestKey(\"page\")));\n    const url = new Source((guest) => {\n      urlChain.value(\n        new GuestCast(guest, ({ basePath, page }) => {\n          give(page.replace(basePath, \"\"), guest);\n        }),\n      );\n    });\n\n    const activeLink = new ComputedElement(\n      [{ source: url, placeholder: \"{url}\" }],\n      `${this.menuSelector} a[href=\"{url}\"]`,\n    );\n    activeLink.element(\n      new Patron(\n        new GroupActiveClass(\n          \"active\",\n          `${this.menuSelector} a`,\n          sourceOf(document),\n        ),\n      ),\n    );\n\n    pageLoading.value(\n      new Patron((isInLoading) => {\n        if (isInLoading) {\n          return;\n        }\n\n        if (afterPageLoaded) {\n          afterPageLoaded();\n        }\n\n        const divDestination = document.querySelector(\n          this.navigationResultSelector,\n        );\n        if (divDestination) {\n          // Оживляем script тэги\n          divDestination.querySelectorAll(\"script\").forEach((x) => {\n            const sc = document.createElement(\"script\");\n            sc.setAttribute(\"type\", \"module\");\n            sc.appendChild(document.createTextNode(x.innerText));\n            divDestination.appendChild(sc);\n          });\n        }\n      }),\n    );\n  }\n}\n","import { GuestType, Patron, SourceWithPoolType } from \"patron-oop\";\n\ntype InputValue = number | string;\n\nexport class Input implements SourceWithPoolType<InputValue> {\n  public constructor(\n    private source: SourceWithPoolType<InputValue>,\n    selector: string,\n  ) {\n    const el = document.querySelector(selector) as HTMLInputElement;\n    this.source.value(\n      new Patron((value) => {\n        el.value = String(value);\n      }),\n    );\n    el.addEventListener(\"keyup\", () => {\n      this.give(el.value);\n    });\n    el.addEventListener(\"change\", () => {\n      this.give(el.value);\n    });\n  }\n\n  public value(guest: GuestType<InputValue>) {\n    this.source.value(guest);\n    return this;\n  }\n\n  public give(value: InputValue) {\n    this.source.give(value);\n    return this;\n  }\n\n  public pool() {\n    return this.source.pool();\n  }\n}\n","import { GuestObjectType } from \"patron-oop\";\n\nexport class Visible implements GuestObjectType<boolean> {\n  public constructor(private selector: string) {}\n\n  public give(isVisible: boolean): this {\n    const el = document.querySelector(this.selector) as HTMLElement;\n    if (el) {\n      el.style.display = isVisible ? \"block\" : \"none\";\n    }\n    return this;\n  }\n}\n","import { GuestObjectType } from \"patron-oop\";\n\nexport class Text implements GuestObjectType {\n  public constructor(private selector: string) {}\n\n  public give(value: unknown) {\n    const element = document.querySelector(this.selector) as HTMLElement;\n    if (element) {\n      element.innerText = String(value);\n    }\n    return this;\n  }\n}\n","import { GuestObjectType, SourceType, value } from \"patron-oop\";\n\nexport class Link {\n  public constructor(\n    private linkSource: GuestObjectType<string>,\n    private basePath: SourceType<string>,\n  ) {}\n\n  public watchClick(selector: string, subselector?: string) {\n    const wrapperEl = document.querySelectorAll(selector);\n    if (wrapperEl.length) {\n      wrapperEl.forEach((theElement) => {\n        theElement.addEventListener(\"click\", (e) => {\n          if (subselector) {\n            theElement\n              .querySelectorAll(subselector)\n              .forEach((theSubElement) => {\n                if (\n                  e?.target === theSubElement ||\n                  e?.currentTarget === theSubElement\n                ) {\n                  this.handleClick({\n                    preventDefault: e.preventDefault.bind(e),\n                    target: theSubElement,\n                  } as unknown as Event);\n                }\n              });\n          } else {\n            this.handleClick(e);\n          }\n        });\n      });\n    } else {\n      throw new Error(`Link wrapper not found for selector ${selector}`);\n    }\n  }\n\n  private handleClick(e: Event) {\n    let href = (e?.target as HTMLElement)?.getAttribute(\"href\");\n    if (!href) {\n      href = (e?.currentTarget as HTMLElement)?.getAttribute(\"href\");\n    }\n    if (href && href.indexOf(\"http\") !== 0) {\n      e.preventDefault();\n      value(this.basePath, (basePath) => {\n        this.linkSource.give(basePath + href);\n      });\n    }\n  }\n}\n","import {\n  give,\n  SourceAll,\n  SourceObjectType,\n  GuestCast,\n  GuestType,\n} from \"patron-oop\";\n\ntype SourceDetailType = {\n  source: SourceObjectType<any>;\n  placeholder: string;\n};\n\nexport class ComputedElement {\n  public constructor(\n    private sources: SourceDetailType[],\n    private selectorTemplate: string,\n  ) {}\n\n  public element(guest: GuestType<HTMLElement>) {\n    const chain = new SourceAll();\n    this.sources.forEach((source) => {\n      source.source.value(\n        new GuestCast(guest as GuestType, chain.guestKey(source.placeholder)),\n      );\n    });\n\n    chain.value(\n      new GuestCast(\n        guest as GuestType,\n        (placeholders: Record<string, string>) => {\n          let selectorTemplate = this.selectorTemplate;\n\n          Object.entries(placeholders).map((entry) => {\n            selectorTemplate = selectorTemplate.replaceAll(entry[0], entry[1]);\n          });\n\n          const element = document.querySelector(\n            selectorTemplate,\n          ) as HTMLElement;\n          if (element) {\n            give(element, guest);\n          }\n        },\n      ),\n    );\n  }\n}\n","import { GuestObjectType, PatronOnce, SourceType, value } from \"patron-oop\";\n\n/**\n * Sets activeClass to one element of group\n * and resets activeClass on other group elements\n * suitable for menu active class\n */\nexport class GroupActiveClass implements GuestObjectType<HTMLElement> {\n  public constructor(\n    private activeClass: string,\n    private groupSelector: string,\n    private document: SourceType<Document>,\n  ) {}\n\n  public give(element: HTMLElement): this {\n    value(\n      this.document,\n      new PatronOnce((document) => {\n        document.querySelectorAll(this.groupSelector).forEach((el) => {\n          el.classList.remove(this.activeClass);\n        });\n        element.classList.add(this.activeClass);\n      }),\n    );\n    return this;\n  }\n}\n","import { RoutePageType } from \"../navigation\";\n\nexport class Page implements RoutePageType {\n  public constructor(private title: string) {}\n\n  public mounted() {\n    document.title = this.title;\n  }\n}\n","import { RoutePageType } from \"../navigation\";\n\nexport class EntryPointPage implements RoutePageType {\n  public constructor(\n    private title: string,\n    private entryPointUrl: string,\n  ) {}\n\n  public mounted() {\n    document.title = this.title;\n    import(this.entryPointUrl).then((module) => {\n      if (module.main) {\n        module.main();\n      }\n    });\n  }\n}\n"],"names":["PageFetchTransport","constructor","basePath","template","this","content","guest","fetch","then","result","text","give","Navigation","loading","currentPage","display","pageTransport","routes","defaultRoute","find","route","default","all","SourceAll","value","Patron","guestKey","urlWithoutBasePath","replace","routeMatchedToAlias","aliases","includes","correctUrl","url","indexOf","RegExp","replaceAll","test","Error","basePathWithoutHash","get","templateContent","page","mounted","RouteDisplay","selector","contentEl","document","querySelector","innerHTML","CurrentPage","__publicField","location","href","origin","source","SourceWithPool","pool","Router","loaderSelector","navigationResultSelector","menuSelector","basePathSource","afterPageLoaded","HistoryNewPage","split","pageLoading","Visible","HistoryPoppedPage","watchPop","PrivateClass","Link","watchClick","urlChain","Source","GuestCast","ComputedElement","placeholder","element","GroupActiveClass","sourceOf","isInLoading","divDestination","querySelectorAll","forEach","x","sc","createElement","setAttribute","appendChild","createTextNode","innerText","Input","el","String","addEventListener","isVisible","style","Text","linkSource","subselector","wrapperEl","length","theElement","e","theSubElement","target","currentTarget","handleClick","preventDefault","bind","getAttribute","sources","selectorTemplate","chain","placeholders","Object","entries","map","entry","activeClass","groupSelector","PatronOnce","classList","remove","add","Page","title","EntryPointPage","entryPointUrl","import","module","main"],"mappings":"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"}